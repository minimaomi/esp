<?xml version="1.0" encoding="utf-8"?>


<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%" 
	backgroundColor="#c0c0c0" 
	currentState="horizontal"
	xmlns:demo="templates.demo.*"

	>
	
	<mx:states>
		<mx:State name="horizontal">
			<mx:SetStyle target="{printPreview}" name="horizontalCenter" value="0"/>
		<!--	<mx:SetProperty target="{printPreview}" name="scaleContent" value="true"/>-->
			<mx:SetStyle name="backgroundColor" value="#f0f0f0"/>
		</mx:State>
		<mx:State name="left">
			<mx:SetStyle target="{printPreview}" name="left" value="0"/>
			<mx:SetStyle target="{printPreview}" name="horizontalCenter"/>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			 
			
		import mx.controls.Alert;
		import mx.controls.Image;
		import mx.utils.Base64Decoder;
		 
		
		[Bindable]
		private var _source:Bitmap;
		public function set source(value:Bitmap):void
		{
			_source = _scaledBmp = value;
			verticalScrollPosition = 0;
		    
			//printPreview
			//printPreview.width =  700 ;
			//printPreview.height= 900 ;
			//printPreview.graphics = 
			dispatchEvent(new Event("sourceChanged"));
		}
		
		[Bindable(event="sourceChanged")]
		public function get source()
		{
			 return printPreview;
		}
	
		
		[Bindable]
		private var _scaledBmp:Bitmap;
		
        [Bindable]
        public var zoom:Number = 1;
        
        private var zoomList:Array =  [.10,.30,.50,0.75,1,1.3,1.5,1.8,2,2.3,2.5,2.8,3];
        private var zoomPosition:int = 4;
        
        private var originalWidth:Number;
        private var originalHeight:Number;        
		private var pageurl:String ="";
	    private var paperWidth:int=0;
		private var paperHeight:int=0;
		public var pageCount:int=1;		
		public var zhengyeRate:Number=1;
		
        public function zoomIn():void
        {
        	if (zoomPosition < zoomList.length-1) {
        		zoomPosition++;
        		zoom = zoomList[zoomPosition];
        	}
        }
		 
       public function winAlign(mywidth:Number):void{
		   var winwidth:Number = Number(ExternalInterface.call("getwinwidth"))-133;
		   
		   if (mywidth>winwidth) {
			    align("left");
		   } else {
				align("center");
		   }
		}
        
		public function zoomOut():void
        {
        	if (zoomPosition > 0) {
        		zoomPosition--;
        		zoom = zoomList[zoomPosition];
        	}           
        }
		
		public function zoomCom(z:Number):void{
			if (zoom === 1) {
				originalWidth = source.width;
				originalHeight = source.height;
			}
			
			 zoom = z;
			 if(z==0){
				 zoom = zhengyeRate;
			 }
			 for(var i=0;i<zoomList.length;i++){
				 if(zoomList[i]==z){
					 zoomPosition = i;
					 break;
				 }
			 }
			 printPreview.height = originalHeight * zoom;
			 printPreview.width = originalWidth * zoom;
		}
		           			
        private function align(anchor:String):void
        {
        	if (anchor === "center") {
				   currentState = 'horizontal';     		
        	} else if (anchor === "left") {
				   currentState = 'left';        		
        	}
        	updateDisplayList(unscaledWidth,unscaledHeight);
        }	
			
		public function setSize(w:int,h:int):void{
			paperWidth = w;
			paperHeight= h;
		}
		 
			 
		]]>
	</mx:Script>
	 

	
	<mx:Image id="printPreview"  top="0"   source="{_scaledBmp}" horizontalCenter="0">
			
	<mx:filters> 
	<flash.filters:DropShadowFilter id='dropShadowFilter' xmlns:flash.filters='flash.filters.*' 
		angle='0'
		blurX='8' blurY='8'
		distance='0'
		alpha='0.3' color='#000000' 
		knockout='false' quality='2'
		strength='2' inner='false' hideObject='false'/>
	
	</mx:filters>	

	</mx:Image>
	
	<mx:VRule height="100%"  right="0"/>
	 
</mx:Canvas>
