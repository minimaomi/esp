<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   applicationComplete="show()"
			   >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	
	
	<fx:Script>
		<![CDATA[
		 
			import com.report.DataParse;
			import com.report.ReportDraws;
			
			import flash.external.*;
			import flash.net.*;
			import flash.printing.PrintJob;
			import flash.printing.PrintJobOptions;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList1;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.UIComponent;
			import mx.utils.StringUtil;
			
			import to9m.SuperPrintJob;
			
			private var pageCount:int = 0;
			private var paperWidth:int = 0;
			private var paperHeight:int = 0;
			private var leftMargin:Number = 1;
			private var rightMargin:Number = 1;
			private var topMargin:Number = 1;
			private var bottomMargin:Number = 1;
			
			private var iniFirst:Boolean = false;
			private var stageW:int;
			private var stageH:int;
			private var currPageIndex:int = 1;
			
			private var pagesList:ArrayList1 = null;
			private var pagesFace:ArrayList1 = new ArrayList1();
			var timerdata:Timer;
			private var myfontFamily:String = "";
			private var selectPrinter:String="no";
			
			private var Orientation:int= 1;
			private var ImageableWidth:int;
			private var ImageableHeight:int;
			private var shrinkrate:Number=1.0;
			private var shrink:int=1;
			private var loadedImage:Array= new Array();
			
			public function show():void
			{				
				var param:Object = root.loaderInfo.parameters;
				//var param:Object = Application.application.parameters;
				var url:String= param.serverUrl;
				if(param["serverUrl"]!=null){
					url = param["serverUrl"];
				}
				if(param["reportFileName"]!=null){
					url += "&fileName="+param["reportFileName"];
				}
				if(param["srcType"]!=null){
					url += "&srcType="+param["srcType"];
				}
				if(param["cachedId"]!=null){
					url += "&cachedId="+param["cachedId"];
				}
				if(param["reportParamsId"]!=null){
					url += "&reportParamsId="+param["reportParamsId"];
				}
				var encoding:String = "gbk"
				if(param["encoding"]!=null){
					encoding = param["encoding"];
					url += "&encoding="+encoding;
				}
				
				if(param["needSelectPrinter"]!=null){
					selectPrinter =  StringUtil.trim(param["needSelectPrinter"]);
				}
				if (1==12){
					url="http://localhost:6868/demo/reportServlet;jsessionid=7DDEA13207C2B82EC8660FBAD8355D7E?action=40&fileName=/1112.rpx&srcType=file&cachedId=A_10747860&encoding=UTF-8&isExportCmd=true";
					url="http://localhost:6868/demo/reportServlet;jsessionid=7DDEA13207C2B82EC8660FBAD8355D7E?action=40&fileName=/1112.rpx&srcType=file&cachedId=A_10747709&encoding=UTF-8";
					//url="C:/Users/Administrator/Downloads/reportServlet301.dat";
				}
				//url="http://localhost:8700/report/reportServlet;jsessionid=433E211BC0CEA148BCC92F4ACB34333C?action=40&fileName=/1.rpx&srcType=file&cachedId=A_10747026&encoding=UTF-8&isExportCmd=true";
				url+="&isExportCmd=true";
				//var stagew:int = Application.application.stage.stageWidth;
				//var stageh:int = Application.application.stage.stageHeight;//减去133的右侧栏宽度
				//ExternalInterface.call("timePrompt", url);
				
				//printPreview.serverUrl(url,stagew,stageh,encoding);
				
				//var hell:HelloWorld = new HelloWorld();
				//var dd:MessageChannelTest = new MessageChannelTest();
				
				loaderMapData(url);
				
			} 
			
			private  var loader:URLStream;
			public  function loaderMapData(mapUrl:String):void  
			{
				pagesList = new ArrayList1();
				loader  = new URLStream(); 
				var request:URLRequest = new URLRequest(mapUrl); 
				
				loader.load(request);
				loader.addEventListener(Event.COMPLETE, progressHandler);  
				
			}
			
			
			private function progressHandler(event:Event):void {
				
				var pagenum:int = loader.readInt();
				this.pageCount = pagenum;
			 
				
				//var totalSize:int = loader.readInt();
				
				var pw:int = loader.readInt();
				this.paperWidth = pw;
				var ph:int = loader.readInt();
				this.paperHeight = ph;
				
				var rate1:Number = 930/this.paperWidth;
				var rate2:Number = 640/this.paperHeight;
				
				
				var  left:int = loader.readInt();
				var  right:int = loader.readInt();
				var  top:int = loader.readInt();
				var  bottom:int  =loader.readInt();
				
				for(var i:int=0;i<pagenum;i++){
					var size:int = loader.readInt();
					
					var bytes:String = loader.readMultiByte(size,"UTF-8");//StringUtil.trim(this.encoding)
					
					
					pagesList.setItemAt(bytes,i);
				}
				var Orient:int = loader.readInt();
				this.Orientation = Orient;
				this.ImageableWidth=loader.readInt();
				this.ImageableHeight=loader.readInt();
				shrink = loader.readInt();
				
				shrinkrate=1;
				if(shrink==2){
					shrinkrate = this.ImageableWidth/this.paperWidth;
				}
				else if(shrink==3){
					shrinkrate = this.ImageableHeight/this.paperHeight;
				}
				
				this.leftMargin = Math.round(left*25.4/72*shrinkrate);
				this.rightMargin  = Math.round(right*25.4/72*shrinkrate);
				this.topMargin = Math.round(top*25.4/72*shrinkrate);
				this.bottomMargin = Math.round(bottom*25.4/72*shrinkrate);
				
				ExternalInterface.call("closePrompt");
				
				timerdata = new Timer(500, 0);   	   
				timerdata.addEventListener(flash.events.TimerEvent.TIMER, completeHander1);
				timerdata.start();
				
				
			}
			private function completeHander1(event:TimerEvent):void
			{
				if(pageCount>0&&pagesList.length==pageCount){
					
					this.timerdata.stop();
					
					doPrint();
				}
			}
			
			private var  spj:SuperPrintJob = new SuperPrintJob();
			private var printCount:int = 0;
			private function doPrint():void{
				
				
				for(var i:int=0;i<pagesList.length;i++){
					var isHP:Boolean = false;//paperWidth>paperHeight;
					if( this.Orientation==0){
						isHP  = true;
					}
					var data = pagesList.getItemAt(i);
					ReportDraws.defaultScale = 1;
					if (this.paperHeight>820){
						ReportDraws.defaultScale = 0.975;
					}
					
					//ReportDraws.translatedx=300;
					var report:ReportDraws = new ReportDraws(null, true,myfontFamily);
					var subReport:ReportDraws = new ReportDraws(report, true,myfontFamily);
					subReport.setLodedImage(loadedImage);
					subReport.setPrintResult(true);
					
					var dp:DataParse = new DataParse(subReport);
					
					dp.dataparse(data,0, 0,this.paperWidth,this.paperHeight);
					report.drawRect(0,0,paperWidth,paperHeight);
					report.addChildAt(subReport,0);
					
					var recMatrix:Matrix =report.transform.matrix;
					recMatrix.scale(shrinkrate,shrinkrate);
					//recMatrix.translate(50,50);
					report.transform.matrix = recMatrix;
					
					// Alert.show(report.transform.matrix.tx.toString());
					if(isHP){
						//report.transform.matrix.translate(100,100);
						report.rotation = 90;
					}
					
					if(1==2){
						import mx.graphics.codec.PNGEncoder;  
						var bd:BitmapData = new BitmapData(paperWidth,paperHeight, false);
						var m:Matrix = new Matrix(); //(1, 0, 0, 1, 10*zoom, 10*zoom
						bd.draw(report,m);
						
						var fr:Object = new FileReference();  
						if(fr.hasOwnProperty("save"))
						{  
							var encoder:PNGEncoder = new PNGEncoder();  
							var bdata:ByteArray = encoder.encode(bd);  
							fr.save(bdata,'chart.png');  
						}
					}
						
					spj.addPrintObject1(report);
					
					printCount++;					
					
				}
				
				timerdata = new Timer(500, 0);   	   
				timerdata.addEventListener(flash.events.TimerEvent.TIMER, printHander);
				timerdata.start();
				
				
			}
			
			
			private function fontLoadComplete(evt:Event):void
			{
				try{
					Font.registerFont(evt.target.content["font_cls1"]);
					Font.registerFont(evt.target.content["font_cls4"]);
					Font.registerFont(evt.target.content["font_cls3"]);
					myfontFamily = "宋体";
				}
				catch(e:Error){
					trace(e.toString());
				}
			}
			
			private function printHander(event:TimerEvent):void
			{
				/*
				if(printCount>=pagesList.length){
					printCount = 0;
					this.timerdata.stop();
					spj.printDirect(selectPrinter);
					

					ExternalInterface.call("thisWinClose");
				}*/
				//Alert.show(printCount.toString());
				if(printCount>=pagesList.length&&loadedImage.length==0){
					//Alert.show(pagesList.length.toString());
					printCount = 0;
					this.timerdata.stop();

					//var printed:Boolean =  spj.printDirect("yes",this.paperWidth,this.paperHeight);
					var printed:Boolean =  spj.print(this.paperWidth,this.paperHeight);
					//if(printed)
					//  ExternalInterface.call("thisWinClose");
					
				}
			}
			
			
			
		]]> 
   
	</fx:Script>
	<mx:SWFLoader source="FontAssets.swf" complete="fontLoadComplete(event);"/>
	
</s:Application>
